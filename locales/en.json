{
    "error": {
        "title": "Error",
        "import_module": "Error: Unable to import AI debate module. Please make sure ai_debate.py is in the current directory.",
        "api_keys_required": "Error: Please provide API keys for both models",
        "topic_required": "Error: Please provide a debate topic or question to optimize",
        "process": "Error occurred during process: {}"
    },
    "models": {
        "deepseek": "DeepSeek Model",
        "claude": "Claude Model",
        "moonshot": "Moonshot Model",
        "chatglm": "ChatGLM Model",
        "qwen": "Qwen Model",
        "ernie": "ERNIE Model"
    },
    "mode": {
        "debate": "Debate Mode",
        "optimization": "Question Optimization Mode"
    },
    "ui": {
        "window_title": "AI Debate & Question Optimization",
        "settings": "System Settings",
        "mode_label": "Work Mode:",
        "model_settings": "Model Settings",
        "model1": "Model 1",
        "model2": "Model 2",
        "temperature": "Temperature:",
        "api_key": "API Key:",
        "custom_api": "Use Custom API",
        "api_base_url": "API Base URL:",
        "rounds": "Rounds:",
        "topic_label": "Debate Topic:",
        "question_label": "Question to Answer:",
        "topic_placeholder": "Enter the debate topic or question to optimize",
        "save_settings": "Save Settings",
        "output_settings": "Output Settings",
        "stream_output": "Stream Output",
        "save_to_file": "Save to File",
        "browse": "Browse...",
        "start": "Start",
        "stop": "Stop",
        "clear": "Clear",
        "custom_api_label": "Using custom API servers...",
        "model1_api": "Model 1 custom API base URL: {}",
        "model2_api": "Model 2 custom API base URL: {}",
        "model1_name": "Model 1 name: {}",
        "model2_name": "Model 2 name: {}",
        "detected_models": "Detected model types: {}",
        "configuring": "Configuring parameters...",
        "work_mode": "Work mode: {}",
        "model_info": "Model {}: {}, Temperature: {}",
        "debate_rounds": "Debate rounds: {}",
        "optimization_iterations": "Optimization iterations: {}",
        "streaming": "Streaming: {}",
        "enabled": "Enabled",
        "disabled": "Disabled",
        "debate_start": "Starting debate:",
        "topic": "Topic: {}",
        "affirmative": "Affirmative: {} (Temperature: {})",
        "negative": "Negative: {} (Temperature: {})",
        "optimization_start": "Starting answer optimization:",
        "question": "Question to answer: {}",
        "analyst": "Analyst: {} (Temperature: {})",
        "optimizer": "Optimizer: {} (Temperature: {})",
        "save_result": "Results saved to: {}",
        
        "api_settings": "API Key Settings",
        "model1_api_settings": "Model 1 API Settings",
        "model2_api_settings": "Model 2 API Settings",
        "other_settings": "Other Settings",
        "processing": "Processing",
        "affirmative_model": "Affirmative Model:",
        "negative_model": "Negative Model:",
        "analyst_model": "Analyst Model:",
        "optimizer_model": "Optimizer Model:",
        "debate_rounds_label": "Debate Rounds:",
        "optimization_iterations_label": "Optimization Iterations:",
        "final_opinions": "Final Answers & Opinions",
        "final_answer": "Final Optimized Answer",
        "start_debate": "Start Debate",
        "start_optimization": "Start Optimization",
        "status_debate_mode": "Switched to Debate mode, obtain high-quality answers through multi-perspective discussion",
        "status_optimization_mode": "Switched to Answer Optimization mode, obtain the best answer through continuous analysis and improvement",
        "api_provider_note": "Note: The system will automatically select the corresponding API provider based on the model name, or use your specified custom API server",
        "progress": "Progress:"
    }
} 